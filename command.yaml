atulize o sistema(se necessario)    
    cmd: sudo apt update
    cmd: sudo apt upgrade -y

instalando git via terminal no linux
    cmd: sudo apt install git -y
    cmd: git --version (verifcando a versao do git)

criando via terminal

    cmd: git config --global user.name "nome do usuario"
    cmd: git config --global user.email "usuario@email.com"
    cmd: git config --global core.editor "seueditor"

comandos para ver 
    cmd: git config user.name

## Ciclo de vida dos status do arquivo
    untracked   -> arquivo acabou de ser adicionado no repositorio mas ainda náo visto pelo git, ou seja o git ainda náo conhece a existencia do arquivo dentro do repositório
    unmodified  -> arquivo adicionado ao git mas ainda nao modificado
    modified    -> arquivo modificado
    staged      -> momento que o arquivo fica em standby esperando a versáo ser fechada quando se cria o commit todos os arquivos viram modified

    sequencia 
    cmd: git add
    cmd: git commit e suas variacoes
    cmd: git commit -am                     ::::>>> ja adiciona todos arquvios junto com o comentario
## git status serve para dar o status
    cmd: git status

    cmd: git config --list

    para criar a pasta
    cmd: mkdir nome_diretorio
    
## Comando para iniciar/criar um repositoro
    cmd: cd nome_diretorio
    cmd: git init
        iniciazaliza o repositorio e verificar todas mudanças no diretorio
        lembrar de ao usar o git init estar no diretorio
        lembrar de criar o Readme.md no repositorio
    cmd: git add README.md
    cmd: git commit -m "descricao do commit"
    cmd: git remote add origin git@github.com:usuarionogithub/nome_repositorio.git
    cmd: git push -u origin master

## ou envair um repositorio ja existente
    cmd: git remote add origin git@github.com:usuarionogithub/nome_repositorio.git
    cmd: git push -u origin master

    cmd: git remote
    cmd: git remote -v

    

# visualizando os logs de um commit (ver historico de versoes, altercao do arquivo)

    cmd: git log                            ::::>>> mostra a hash do commit (identificaçao) ,Autor e  ,Data
    cmd: git log --decorate                 ::::>>> mostra origem e destino do commit e outras cositas mas
    cmd: git log --author="nome_do_autor"   ::::>>> busca todos commits feito por um autor que contenha palavra dentro das aspas 
    cmd: git shortlog                       ::::>>> mostra em ordem alfabetica os autores, commits feitos e quantos fizeram
    cmd: git shortlog -sn                   ::::>>> mostra só as pessoas e qtd de commits
    cmd: git log --graph                    ::::>>> mostra em forma gráfica o que acontece com as branches e versöes

    pegando a hash do commit e usando o cmd git show podemos ver o que foi adicionado na branch

    cmd: git show numero_da_hash_de_identificacao_do_commit

# visualizando as diferenças antes de commit uma branch

    cmd: git diff                          ::::>>> mostra as alterçoes feita na branch
    cmd: git diff --name-only              ::::>>> motra só os nomes dos arquivos que sofreram alteraçoes

# resetar os erros

    cmd: git checkout nome_arquivo         ::::>>> retorna as alteraçoes feita nesse arquivo para antes da ediçao enquanto o arqv esta em edicao
    cmd: git reset HEAD nome_arquivo       ::::>>> retorna o arquivo que esta na fila do stage (momento depois do git add . e antes do git commit)
    cmd: git reset --soft hash_do_comit_ant :::>>> desfaz o commit feito e mantem as alteraçoes no arquivo e deixa pronto para um novo commit (deixa o arquivo depois do git add)
    cmd: git reset --mixed hash_do_comit_ant :::>>> desfaz o commit feito e mantem as alteraçoes no arquivo e (deixa o arquivo antes do git add)
    cmd: git reset --hard hash_do_comit_ant :::>>> desfaz o commit e as alteracoes feita no arquivo

# criando chave SSH para o github
    caso necessario gerar a chave ssh para conectar com github

        1 - abrir o terminal
            - ir para o home no diretorio de onde ficam as chaves ssh
            cmd: cd ~/.ssh/
            cmd: cat id_rsa.pub
            
        2- $ ssh-keygen -t rsa -b 4096 - C 

#subindo para repositorio remoto

    cmd: git commit -am
    ou se quiser adicionar arquivo em especicio
    cmd: git add "nome_do_arquivo"
    cmd: git push origin "branch_em que esta"